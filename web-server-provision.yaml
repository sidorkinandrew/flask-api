- hosts: tag_aws_autoscaling_groupName_flask_api_asg
  remote_user: ubuntu
  become: true
  gather_facts: true

  vars:
    - destdir: /app
    - db_endpoint: flask_db
    - db_password: some_password
    - ssh_key_filename: my_project_key

  tasks:
    - name: Update all packages
      apt:
        update_cache: yes
        name: "*"
        state: latest

    - name: Install dependencies
      apt:
        pkg:
          - curl
          - ca-certificates
          - gnupg
          - lsb-release
          - htop
          - wget
          - mc
          - git
          - python3-docker

    - name: Add Docker GPG apt Key
      apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present
        keyring: /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add Docker Repository
      apt_repository:
        repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        filename: docker
        state: present

    - name: Install docker-ce
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Add "ubuntu" user to the "docker" group
      remote_user: ubuntu
      user:
        name: "ubuntu"
        group: "docker"
        append: yes

    - name: Install docker-compose from official github repo
      get_url:
        url : https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

    - name: Ensure the project ssh key exists
      openssh_keypair:
        path: "{{ lookup('env','HOME') + '/.ssh/{{ssh_key_filename}}' }}"
        type: ed25519
      delegate_to: localhost
      run_once: true
      register: ssh_key

    - name: Copy the project ssh keys to instances
      vars_prompt:
        - name: "waiting_for_ssh_added_to_github"
          prompt: "Press <Enter> once this public key added to Github:\n {{ssh_key.public_key}}\n"
      become: true
      authorized_key:
        user: "{{ lookup('env', 'USER') }}"
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/{{ssh_key_filename}}.pub') }}"
        state: present

    - name: Restart secure shell daemon post configuration
      service: 
        name: sshd
        state: restarted

#    - name: Copy the generated ssh key to remote server
#      authorized_key:
#        user: "{{ansible_user}}"
#        key: "{{item}}"
#      with_file:
#        - ".ssh/{{ssh_key_filename}}.pub"

    - name: Download the Flask REST API code from the GitRepo
      become: yes
      git:
        repo: 'https://github.com/sidorkinandrew/flask-api.git'
        dest: "/{{ destdir }}"
        force: yes

    - name: Move the src file to dest
      command: mv "/{{ destdir }}/.env.example" "/{{ destdir }}/.env"
      args:
        removes: "/{{ destdir }}/.env.example"
        creates: "/{{ destdir }}/.env"

    - name: replacing db endpoint in .env file
      lineinfile: 
        path: /app/.env
        regexp: '^(.*)DB_HOSTNAME=(.*)$' 
        line: 'DB_HOSTNAME={{ db_endpoint }}'
        backrefs: yes

    - name: replacing db password in .env file
      lineinfile: 
        path: /app/.env
        regexp: '^(.*)MYSQL_PASSWORD=(.*)$' 
        line: 'MYSQL_PASSWORD={{ db_password }}'
        backrefs: yes

# not working correctly for 16.04 ubuntu
#    - name: Deploy via docker-compose
#      community.docker.docker_compose:
#        project_src: /app
#        build: yes
#        files:
#          - docker-compose.yaml


    - name: Run the stack of containers via docker-compose
      become: true
      shell:
        cmd: "docker-compose -f docker-compose.yaml up -d"
        chdir: /app/

